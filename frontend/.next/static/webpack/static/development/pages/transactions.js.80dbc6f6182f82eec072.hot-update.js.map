{"version":3,"file":"static/webpack/static/development/pages/transactions.js.80dbc6f6182f82eec072.hot-update.js","sources":["webpack:///./components/TransactionList.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\n\nconst TRANSACTION_QUERY = gql`\n  query TRANSACTION_QUERY {\n    transactions {\n      id\n      amount\n      lockbox {\n        box\n        branch\n      }\n      transactionType\n    }\n  }\n`;\n\nconst TableStyle = styled.div`\n  .table-container {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n  table {\n    width: 800px;\n    border-collapse: collapse;\n    overflow: hidden;\n    box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\n  }\n\n  th,\n  td {\n    padding: 15px;\n  }\n\n  th {\n    text-align: left;\n  }\n\n  thead {\n    th {\n      background-color: #55608f;\n    }\n  }\n\n  tbody {\n    tr {\n      &:hover {\n        background-color: rgba(255, 255, 255, 0.3);\n      }\n    }\n    td {\n      position: relative;\n      &:hover {\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          right: 0;\n          top: -9999px;\n          bottom: -9999px;\n          background-color: rgba(255, 255, 255, 0.2);\n          z-index: -1;\n        }\n      }\n    }\n  }\n`;\n\nclass TransactionList extends Component {\n  render() {\n    return (\n      <Query query={TRANSACTION_QUERY}>\n        {({ data: { transactions }, loading, error }) => {\n          if (loading) return <p>Loading...</p>;\n          if (error) return <p>{error}</p>;\n          return (\n            <TableStyle>\n              <table className=\"table-container\">\n                <thead>\n                  <tr>\n                    <th>Lockbox</th>\n                    <th>Transaction</th>\n                    <th>Amount</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {transactions.map(transaction => (\n                    <tr key={transaction.id}>\n                      <td>{transaction.lockbox.box}</td>\n                      <td>{transaction.transactionType}</td>\n                      <td>{transaction.amount}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </TableStyle>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default TransactionList;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAcA;AAAA;AAAA;AAAA;AACA;AAohCA;AACA;AAkCA;;;;A","sourceRoot":""}